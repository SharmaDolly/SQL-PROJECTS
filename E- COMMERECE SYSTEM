Create Database Retail;
USE  Retail;


-- CREATE CUSTOMERS TABLE
CREATE TABLE Customers (
    CustomerID INT PRIMARY KEY,
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    Email VARCHAR(100) UNIQUE,
    Phone VARCHAR(20),
    Address VARCHAR(255)
);


-- CREATE CATEGORIES TABLE
CREATE TABLE Categories (
    CategoryID INT PRIMARY KEY,
    CategoryName VARCHAR(50)
);

-- CREATE PRODUCTS TRABLE
CREATE TABLE PRODUCTS (
    ProductID INT PRIMARY KEY,
    ProductName VARCHAR(100),
    Description TEXT,
    Price DECIMAL(10 , 2 ),
    StockQuantity INT,
    CategoryID INT,
    FOREIGN KEY (CategoryID)
        REFERENCES Categories (CategoryID)
);

-- CREATE ORDERS TABLE
CREATE TABLE Orders (
    OrderID INT PRIMARY KEY,
    CustomerID INT,
    OrderDate DATE,
    TotalAmount DECIMAL(10 , 2 ),
    Status VARCHAR(20),
    FOREIGN KEY (CustomerID)
        REFERENCES Customers (CustomerID)
);

-- CREATE ORDERITEMS TABLE
CREATE TABLE OrderItems (
    OrderItemID INT PRIMARY KEY,
    OrderID INT,
    ProductID INT,
    Quantity INT,
    Subtotal DECIMAL(10 , 2 ),
    FOREIGN KEY (OrderID)
        REFERENCES Orders (OrderID),
    FOREIGN KEY (ProductID)
        REFERENCES Products (ProductID)
);

-- INSERT SAMPLE CUSTOMERS
INSERT INTO Customers (CustomerID, FirstName, LastName, Email, Phone, Address) VALUES (1,'John','Doe','john.doe@example.com','123-456-7890','123 Main ST'), (2,'Jane','Smith','jane.smith@example.com','987-654-3210','456 Oak Ave');

-- INSERT SAMPLE CATEGORIES
INSERT INTO Categories(CategoryID, CategoryName) VALUES (1,'Electronics'),(2,'Clothing'),(3,'Home and Garden');

-- INSERT SAMPLE PRODUCTS
INSERT INTO Products (ProductID,ProductName,Description,Price,StockQuantity,CategoryID) VALUES (1,'Laptop','High Performance Laptop',999.99,50,1),(2,'T-Shirt','Cotton T-Shirt',19.99,100,2),(3,'LED TV','Smart LED TV',499.99,30,1);

-- INSERT SAMPLE ORDERS
INSERT INTO Orders(OrderID,CustomerID,OrderDate,TotalAmount,Status) VALUES (1,1,'2023-01-01',999.99,'Completed'),(2,2,'2023-02-01',39.98,'Pending'),(3,1,'2023-03-01',999.99,'In-Transit'),(4,2,'2023-03-01',39.98,'In-Transit');

-- INSERT SAMPLE ORDERITEMS
INSERT INTO OrderItems(OrderItemID,OrderID,ProductID,Quantity,SubTotal) VALUES (1,1,1,1,999.99),(2,1,2,2,39.98),(3,2,3,1,900.99);

USE RETAIL;
   SELECT * FROM Customers;
   SELECT * FROM Categories;
   SELECT * FROM Products;
   SELECT * FROM Orders;
   SELECT * FROM OrderItems;
   
   
-- TOP SELLING PRODUCTS 
   SELECT Products.ProductID, Products.ProductName, Products.Description, OrderItems.OrderID, OrderItems.Quantity, Products.ProductID, OrderItems.ProductID FROM OrderItems RIGHT JOIN Products ON Products.ProductID = OrderItems.ProductID WHERE Quantity= (SELECT max(Quantity) FROM OrderItems);
   -- Number of Orders 
SELECT YEAR(OrderDate) as OrderYear, MONTH(OrderDate) as OrderMonth, COUNT(*) AS NumberOfOrders FROM Orders GROUP BY YEAR(OrderDate), MONTH(OrderDate) ORDER BY OrderYear, OrderMonth;  
   -- CALCULATE TOTAL REVENUE
   SELECT SUM(OrderItems.Quantity * OrderItems.Subtotal) AS TotalRevenue FROM Orders JOIN OrderItems ON Orders.OrderID = OrderItems.OrderID WHERE Orders.OrderDate >='2023-01-01' AND Orders.OrderDate < '2023-02-01';
   -- RETRIEVE ORDER DETAILS INCLUDING PRODUCTS 
   SELECT 
   Customers.CustomerID, Customers.FirstName, Customers.LastName, Products.ProductName, Orders.OrderID, Orders.OrderDate, OrderItems.ProductID, OrderItems.Quantity, OrderItems.Subtotal, OrderItems.Quantity*Subtotal AS TotalRevenue 
   FROM Orders JOIN Customers ON Orders.CustomerID = Customers.CustomerID JOIN OrderItems ON Orders.OrderID = OrderItems.OrderID JOIN Products ON OrderItems.ProductID = Products.ProductID;
   -- RETRIEVE PRODUCTS IN A SPECIFIC CATEGORY
   SELECT ProductID, ProductName, CategoryName FROM Products INNER JOIN Categories ON Products.CategoryID = Categories.CategoryID WHERE CategoryName = 'Clothing';
   -- RETREIVE PRODUCT DETAILS BY NAME
   SELECT ProductID, ProductName, Description, Price FROM Products WHERE ProductName = 'LED TV';
   -- RETRIEVE ALL ORDERS FOR A CUSTOMER
   SELECT  Products.ProductName, Orders.OrderID, Orders.OrderDate, OrderItems.ProductID, OrderItems.Quantity, OrderItems.Subtotal, OrderItems.Quantity*Subtotal AS TotalRevenue FROM Orders JOIN Customers ON Orders.CustomerID = Customers.CustomerID JOIN OrderItems ON Orders.OrderID = OrderItems.OrderID JOIN Products ON OrderItems.ProductID = Products.ProductID WHERE  Customers.CustomerID = 2;
   
